$container-padding: 1rem;

svg:not(:root) {
  overflow: visible !important;
}
.container {
  margin-left: auto;
  margin-right: auto;
  max-width: 400px;
  padding-left: 1rem;
  padding-right: 1rem;
  overflow: hidden;

  &.not-hidden {
    overflow: visible;
  }
 
 
  @include respond(s) {
    max-width: 600px;
    padding-left: $container-padding * 2;
    padding-right: $container-padding * 2;
  }

  @include respond(m) {
    max-width: 700px;
    padding-left: $container-padding * 2;
    padding-right: $container-padding * 2;
    &-big {
      max-width: 1300px;
    }
    &.one-side {
      padding-right: $container-padding * 2;

      max-width: calc(((100% - 1140px) / 2) + 1140px) !important;
    }
  }
  @include respond(lg) {
    max-width: 960px;
    padding-left: $container-padding * 2;
    padding-right: $container-padding * 2;
    &-big {
      max-width: 1300px;
    }
    &.one-side {
      padding-right: $container-padding * 2;

      max-width: calc(((100% - 1140px) / 2) + 1140px) !important;
    }
  }
  @include respond(xl) {
    max-width: 1140px;
    padding-left: $container-padding * 2;
    padding-right: $container-padding * 2;
    &-big {
      max-width: 1300px;
    }
    &.one-side {
      padding-right: $container-padding * 2;

      max-width: calc(((100% - 1140px) / 2) + 1140px) !important;
    }
  }
  @include respond(2xl) {
    max-width: 1220px;
    padding-left: $container-padding * 2;
    padding-right: $container-padding * 2;
    &-big {
      max-width: 1300px;
    }
    &.one-side {
      padding-right: $container-padding * 2;
      max-width: calc(((100% - 1220px) / 2) + 1220px) !important;
    }
  }

  @include respond(3xl) {
    max-width: 1450px;
    padding-left: 85px;
    padding-right: 85px;
    &-big {
      max-width: 1500px;
    }
    &.one-side {
      padding-right: 85px;

      max-width: calc(((100% - 1450px) / 2) + 1450px) !important;
    }
  }

  // @include respond(xxl) {
  //     max-width: 175rem;
  //     padding-left: 100px;
  //     padding-right: 100px;
  //     &-big{
  //         max-width: 160rem;
  //     }
  //     &.one-side{
  //     padding-right: 100px;

  //       max-width: calc(((100% - 175rem) / 2) + 175rem) !important;
  //   }
  // }

  // @include respond(xxxl) {
  //     max-width: 190rem;
  //     padding-left: 100px;
  //     padding-right: 100px;
  //     &-big{
  //         max-width: 190rem;
  //     }
  //     &.one-side{
  //        @include respond(m){
  //         padding-right: 100px;

  //       }
  //       max-width: calc(((100% - 190rem) / 2) + 190rem) !important;
  //   }
  // }

  &__not-hidden {
    overflow: visible;
  }

  &-fluid {
    padding-right: 0px;
    padding-left: 0px;
  }

  &.align-right {
    margin-right: 0;
  }
}

// $columns: 12; // number of columns in the grid system
.row {
  display: flex !important;
  // padding-right: 10px;
  // padding-left: 10px;
  // align-items: center;
  //flex-direction: column;
  // @include respond(m) {

  //         flex-direction: row;

  // }
  margin: 0 -1rem;
  &.no-margin {
    margin: 0;
  }
  &.gutter-big {
    margin: 0 -1.5rem;
    .col {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
    }
  }
}

.row-revers {
  flex-direction: row-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-dir {
  @include respond(m) {
    &-row {
      flex-direction: row;
    }
  }
}

.col {
  // background-color: pink;
  // border-radius: 8px;
  padding-right: 1rem;
  padding-left: 1rem;

  &-no-sidePadding {
    padding-right: 0;
    padding-left: 0;
  }
}

$columns: 12;

.w__no-padding {
  padding-left: 0;
  padding-right: 0;
}

$columns: 12;

@for $width from 1 through $columns {
  .col-#{$width} {
    width: $width / $columns * 100%;
  }
}

@for $width from 1 through $columns {
  .col-#{$width}-xs {
    @include respond(xs) {
      width: $width / $columns * 100%;
    }
  }
}

@for $width from 1 through $columns {
  .col-#{$width}-sm {
    @include respond(s) {
      width: $width / $columns * 100%;
    }
  }
}

@for $width from 1 through $columns {
  .col-#{$width}-ta {
    @include respond(t) {
      width: $width / $columns * 100%;
    }
  }
}

@for $width from 1 through $columns {
  .col-#{$width}-md {
    @include respond(m) {
      width: $width / $columns * 100%;
    }
  }
}

@for $width from 1 through $columns {
  .col-#{$width}-lg {
    @include respond(lg) {
      width: $width / $columns * 100%;
    }
  }
}
@for $width from 1 through $columns {
  .col-#{$width}-xl {
    @include respond(xl) {
      width: $width / $columns * 100%;
    }
  }
}
@for $width from 1 through $columns {
  .col-#{$width}-2xl {
    @include respond(2xl) {
      width: $width / $columns * 100%;
    }
  }
}

.align-center {
  align-items: center;
}

.align-baseline {
  align-items: baseline;
}

.align-start {
  align-items: flex-start;
}
.align-end {
  align-items: flex-end;
}
.align-stretch {
  align-items: stretch;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}
.flex-between {
  justify-content: space-between;
}
.flexColumn {
  flex-direction: column;
  .col {
    padding-right: 0;
    padding-left: 0;
    padding-top: 1rem;
    padding-bottom: 1rem;
  }
}
